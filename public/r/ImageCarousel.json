{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ImageCarousel",
  "type": "registry:component",
  "dependencies": [],
  "files": [
    {
      "path": "components/ui/ImageCarousel/imagecarousel.tsx",
      "content": "'use client'\r\n\r\nimport React, { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ImageData {\r\n  src: string;\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface ImageCarouselProps {\r\n  images: ImageData[]; // required now\r\n  buttonClassName?: string;\r\n}\r\n\r\nexport const ImageCarousel: React.FC<ImageCarouselProps> = ({\r\n  images,\r\n  buttonClassName,\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n  const nextIndex = (currentIndex + 1) % images.length;\r\n  const prevIndex = (currentIndex - 1 + images.length) % images.length;\r\n\r\n  const nextImage = () => {\r\n    setIsTransitioning(true);\r\n    setTimeout(() => {\r\n      setCurrentIndex((prev) => (prev + 1) % images.length);\r\n      setTimeout(() => setIsTransitioning(false), 50);\r\n    }, 300);\r\n  };\r\n\r\n  const prevImage = () => {\r\n    setIsTransitioning(true);\r\n    setTimeout(() => {\r\n      setCurrentIndex((prev) => (prev - 1 + images.length) % images.length);\r\n      setTimeout(() => setIsTransitioning(false), 50);\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-[400px] h-[550px] mx-auto mt-32\">\r\n      {/* Side images */}\r\n      <img\r\n        src={images[prevIndex].src}\r\n        alt=\"img-prev\"\r\n        className={`hidden sm:block absolute top-[6.5rem] left-0 w-[280px] h-[350px] object-cover rounded-md shadow-lg transition-all duration-700 ease-in-out -translate-x-[180px] -rotate-[20deg] opacity-100 z-0 ${\r\n          isTransitioning ? \"opacity-0 -translate-x-[220px] -rotate-[30deg]\" : \"\"\r\n        }`}\r\n      />\r\n      <img\r\n        src={images[nextIndex].src}\r\n        alt=\"img-next\"\r\n        className={`hidden sm:block absolute top-[6.5rem] right-0 w-[280px] h-[350px] object-cover rounded-md shadow-lg transition-all duration-700 ease-in-out translate-x-[180px] rotate-[20deg] opacity-100 z-0 ${\r\n          isTransitioning ? \"opacity-0 translate-x-[220px] rotate-[30deg]\" : \"\"\r\n        }`}\r\n      />\r\n\r\n      {/* Main image */}\r\n      <div className=\"absolute left-1/2 top-0 -translate-x-1/2 z-10 w-[360px] h-[500px] rounded-md shadow-2xl overflow-hidden\">\r\n        <img\r\n          src={images[currentIndex].src}\r\n          alt={`img-${currentIndex}`}\r\n          className={`w-full h-full object-cover transition-all duration-500 ${\r\n            isTransitioning ? \"opacity-0 scale-90\" : \"opacity-100 scale-100\"\r\n          }`}\r\n        />\r\n        <div className=\"absolute top-0 left-0 w-full h-24 bg-gradient-to-b from-black/60 to-transparent z-10\" />\r\n        <div className=\"absolute top-0 left-0 w-full px-4 py-3 text-white z-20\">\r\n          <h2 className=\"text-xl font-semibold\">{images[currentIndex].title}</h2>\r\n          {images[currentIndex].description && (\r\n            <p className=\"text-sm\">{images[currentIndex].description}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation buttons */}\r\n      <div className=\"absolute bottom-[-60px] left-1/2 -translate-x-1/2 flex gap-6 z-30\">\r\n        <button\r\n          onClick={prevImage}\r\n          disabled={isTransitioning}\r\n          className={cn(\r\n            `text-xl sm:text-2xl px-4 py-2 rounded-full shadow-lg transition-all duration-300 disabled:opacity-40\r\n             bg-[#dcdcdc] text-black dark:bg-black dark:text-white\r\n             hover:scale-110\r\n             focus:outline-none focus:ring-2 focus:ring-purple-500\r\n             focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-950`,\r\n            buttonClassName\r\n          )}\r\n        >\r\n          ←\r\n        </button>\r\n        <button\r\n          onClick={nextImage}\r\n          disabled={isTransitioning}\r\n          className={cn(\r\n            `text-xl sm:text-2xl px-4 py-2 rounded-full shadow-lg transition-all duration-300 disabled:opacity-40\r\n             bg-[#dcdcdc] text-black dark:bg-black dark:text-white\r\n             hover:scale-110\r\n             focus:outline-none focus:ring-2 focus:ring-purple-500\r\n             focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-950`,\r\n            buttonClassName\r\n          )}\r\n        >\r\n          →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};",
      "type": "registry:component",
      "target": "components/ImageCarousel/imagecarousel.tsx"
    }
  ]
}